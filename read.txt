//-------------------------------------------------------------------------------------------------- Lesson 1 (Autoload)
1) autoload -> در یک فایل و تعداد بالا ئ مشکلات زیاد بهترین راه نوشتن اتولودر خودکار require_once='' به جای نوشتن
2) autoload -> هر کلاسی که در پوشه (کلاس ها) بنویسیم و میتونیم داخل فایل (اتولود) آن را فراخوانی کنیم



//-------------------- Test1.php
class Test1
{
    public function test()
    {
        echo "Test - 1";
    }
}


//-------------------- Test2.php
class Test2
{
    public function test()
    {
        echo "Test - 2";
    }
}



//-------------------- autoload.php
function my_autoload($classes)  //name class
{
    require_once "classes/" . $classes . ".php";  //classes/Test.php
}
spl_autoload_register('my_autoload');  //هر کلاسی که در پوشه classes بنویسیم و میتونیم داخل فایل autoload ن را فراخوانی کنیم




//-------------------- index.php
<?php
require_once "./app/core/autoload.php";

$t1 = new Test1();
$t1->test();
echo "<br/><br/>";

$t2 = new Test2();
$t2->test();
echo "<br/><br/>";

$t3 = new Test3();
$t3->test();






























//---------------------------------------------------------------------------------------------- Lesson 2 (Waht is MVC?)
1) MVC -> Model View Controller

























//------------------------------------------------------------------------------------------------ Lesson 3 (Folder Mvc)
1) Bootstrap.php -> راه انداز پروژه -> درونش دیتابیس و مسیر ها و کنترلر ها


//-------------------- app/Bootstrap.php
require_once "libraries/Controller.php";
require_once "libraries/Core.php";  //routes
require_once "libraries/Database.php";


//-------------------- public/index.php
require_once "../app/Bootstrap.php";

























//----------------------------------------------------------------------------------------- Lesson 4 (.htaccess -> safe)
1) .htaccess -> options -Indexes این عدد منفی باعث میشه دیگ نتونیم به پوشه اپ دسترسی داشته باشیم
2) http://localhost/php%20mvc%20tur/public/index.php?url=Posts/edit/10
3) Posts/edit/10 -> Controller/Method/Parameters
4) Url(User Friendly) -> localhost:mvc/public/posts/edi/3
5) url -> http://localhost/php_mvc_tur/public/post/edit/5  // در حال حاضر آدرس نیازی به نوشتن ایندکس پی اچ پی نیست


//-------------------- app/.htaccess  //برای ندیدین مقدار های درون پوشه اپ
options -Indexes  //options -Indexes این عدد منفی باعث میشه دیگ نتونیم به پوشه اپ دسترسی داشته باشیم


//-------------------- public/.htaccess  //index.php?url حذف این قسمت از آدرس
<IfModule mod_rewrite.c>
    options -Multiviews  //Multiviews -> آخر فایل از بین میبره، حالت کاربر پسند تر .php اگر پشتش مثبت بزاریم میاد حساسیت
    RewriteEngine On                     //موتور راه اندازی کردن
    RewriteBase /php_mvc_tur/public      //مسیر اصلی پروژه
    RewriteCond %{Request_FileName} !-d  //RewriteCondition(شرط ها) -> دایرکتوری باز نکن
    RewriteCond %{Request_FileName} !-f  //RewriteCondition(شرط ها) -> فایل باز نکن
    RewriteRule ^(.+)$ index.php?url=$1 [QSA,L]  //^(.+)$ index.php?url=$1 میگیره ?url این مقدارحذف و آدرس از طرق + [QSA,L] -> QueryStringAppend
    //$1 -> string مقدار جلوی آدرس استرینگ
</IfModule>


//-------------------- public/index.php
require_once "../app/Bootstrap.php";

$url = explode('/' , $_GET['url']);  //$_GET['url'] -> url -> RewriteRule ^(.+)$ index.php?url=$1 [QSA,L] //از این قسمت پیش فرض url نام این
echo "<pre>";
var_dump($url);
var_dump($



























//-------------------------------------------------------------------------------------- Lesson 5 (Remove public in url)
//-------------------- .htaccess  //remove public in url
<IfModule mod_rewrite.c>
    RewriteEngine On                //موتور راه اندازی کردن
    RewriteRule ^$ public/ [L]      //^$ public/ -> بیا اول تا آخر این کلمه پابلیک بگیر
    RewriteRule (.*) public/$1 [L]  //(.*) public/$1 -> هر جایی که شروع شد با پابلیک بیا حذف کن
</IfModule>
























//----------------------------------------------------------------------------------- Lesson 6 (Core filter url + rtrim)
//-------------------- app/Libraries/Core.php
class Core
{
    protected string $currentController = "Home";
    protected string $currentMethod = "index";
    protected array $params = [];

    public function __construct()
    {
        $url = $this->getUrl();  //$url is array
        echo "<pre>";
        var_dump($url);
    }

    protected function getUrl()
    {
        $url = trim($_GET['url'], '/');                //trim -> از سمت راست میاد مقدار کاراکتر که میدیم میاد حذف میکنه
        $url = filter_var($url, FILTER_SANITIZE_URL);  //FILTER_SANITIZE_URL ->localhost/php_mvc/course واویلالیلی این متن فارسی در نظر نمیگیره
        return explode('/', $url);                     //$_GET['url'] -> index.php?url=Controller/Method/Params
    }
}




//-------------------- public/index.php
require_once "../app/Bootstrap.php";

echo "Public - index.php" . "<br/><br/><br/>";
$core = new Core();

































//------------------------------------------------------------------------------------------- Lesson 7 (Core controller)
//-------------------- app/Libraries/Core.php
class Core
{
    protected mixed $currentController = "HomeController";
    protected string $currentMethod = "index";
    protected array $params = [];

    public function __construct()
    {
        $url = $this->getUrl();  //$url is array
        //اگر درون پوشه کنترلر چیزی ساختیم اون اجرا کن وگرنه پیش فرض نبود هوم اجرا کن + (SliderController+UserController حروف اول به صورت بزرگ)ucwords
        if (file_exists("../app/Controllers/" . ucwords($url[0]) . "Controller.php")) {
            echo $this->currentController = ucwords($url[0]) . "Controller";  //ucwords -> حروف اول بزرگ . "Controller"
            unset($url[0]);  //در آخر مقدار صفر آرایه که کنترلر ما حذف میکینم از آرایه
        } else {
            echo "<h1>Page Not Fond : 404</h1>";
        }
        require_once "../app/Controllers/" . $this->currentController . ".php";  //مقدار استرینگ کنترلر درون پراپرتی currentController
        $this->currentController = new $this->currentController;  //Category = new Category(); ایجاد یک آبجکت از کلاس تا دسترسی به تمامی متود ها
    }

    protected function getUrl()
    {
        $url = trim($_GET['url'], '/');             //trim -> از سمت راست میاد مقدار کاراکتر که میدیم میاد حذف میکنه
        $url = filter_var($url, FILTER_SANITIZE_URL);  //FILTER_SANITIZE_URL ->localhost/php_mvc/course واویلالیلی این متن فارسی در نظر نمیگیره
        return explode('/', $url);                 //$_GET['url'] -> index.php?url=Controller/Method/Params
    }
}






























//-------------------------------------------------------------------------------------- Lesson 8 (Core mehtod + params)
1) call_user_func_array([$this->currentController , $this->currentMethod] , $this->params);  //1)[controller,method] 2)params متود اصلی در ساخت MVC



//-------------------- app/Libraries/Core.php
class Core
{
    protected mixed $currentController = "HomeController";
    protected string $currentMethod = "index";
    protected array $params = [];

    public function __construct()
    {
        $url = $this->getUrl();

        //----- Controller
        //اگر درون پوشه کنترلر چیزی ساختیم اون اجرا کن وگرنه پیش فرض نبود هوم اجرا کن + (SliderController+UserController حروف اول به صورت بزرگ)ucwords
        if (file_exists("../app/Controllers/" . ucwords($url[0]) . "Controller.php")) {
            $this->currentController = ucwords($url[0]) . "Controller";  //ucwords -> حروف اول بزرگ . "Controller"
            unset($url[0]);  //در آخر مقدار صفر آرایه که کنترلر ما حذف میکینم از آرایه
        } else {
            echo "<h1>Page Not Fond : 404</h1>";
        }
        require_once "../app/Controllers/" . $this->currentController . ".php";  //مقدار استرینگ کنترلر درون پراپرتی currentController
        $this->currentController = new $this->currentController;  //Category = new Category(); ایجاد یک آبجکت از کلاس تا دسترسی به تمامی متود ها

        //----- Method
        if (isset($url[1])) {
            if (method_exists($this->currentController, $url[1])) {
                $this->currentMethod = $url[1];
                unset($url[1]);
            }
        }

        //----- Parameters
        //بعد از حذف کنترلر و متود از آرایه url$ هر چیزی با قی ماند پارامترز ما + array_values ایندکس آرایه به جای دو میش صفرم
        $this->params = $url ? array_values($url) : [];
        call_user_func_array([$this->currentController , $this->currentMethod] , $this->params);  //1)[controller,method] 2)params متود اصلی در ساخت MVC
    }

    protected function getUrl()
    {
        $url = trim($_GET['url'], '/');             //trim -> از سمت راست میاد مقدار کاراکتر که میدیم میاد حذف میکنه
        $url = filter_var($url, FILTER_SANITIZE_URL);  //FILTER_SANITIZE_URL ->localhost/php_mvc/course واویلالیلی این متن فارسی در نظر نمیگیره
        return explode('/', $url);                 //$_GET['url'] -> index.php?url=Controller/Method/Params
    }
}




//-------------------- app/Controllers/CategoryController.php
class CategoryController
{
    public function index()
    {
        echo "CategoryController - index";
    }

    public function create()
    {
        echo "CategoryController - create";
    }
}



//-------------------- app/Controllers/SliderController.php
class SliderController
{
    public function index()
    {
        echo "SliderController - index";
    }

    public function create()
    {
        echo "SliderController - create";
    }

    public function store()
    {
        echo "SliderController - store";
    }

    public function show($id)
    {
        echo "SliderController - show id=$id";
    }

    public function calc($param1, $param2, $param3)  //http://localhost/php_mvc_tur/slider/calc/10/20/20
    {
        echo $param1 + $param2 + $param3;
    }

}


































//------------------------------------------------------------------------------------------ Lesson 9 (Controller model)
//-------------------- app/Libraries/Controller.php
class Controller
{
    public function __construct()
    {
    }

    public function model($model)
    {
        $model = ucwords($model);
        if (file_exists("../app/Models/" . $model . ".php")) {
            require_once "../app/Models/$model.php";
            echo $model;
            return new $model;  //return new User();
        }
    }
}




//-------------------- app/Controllers/UserController.php
class UserController extends Controller
{
    public function create()
    {
        $this->model('user');
    }
}
































//------------------------------------------------------------------------------------------ Lesson 10 (Controller view)
//-------------------- app/Libraries/Controller.php
class Controller
{
    public function __construct()
    {
    }

    public function view($view, $data = [])
    {
        $view = str_replace(".", '/', $view);
        if (file_exists("../app/Views/$view.php")) {
            require_once "../app/Views/$view.php";
        }else {
            echo "<h1>Page Not Found : 404</h1>";
        }
    }
}



//-------------------- app/Controllers/UserController.php
class UserController extends Controller
{
    public function index()
    {
        $this->view('users.index');
    }
}




//-------------------- app/Controllers/ProductController.php
class ProductController extends Controller
{
    public function index()
    {
        $this->view("products.index");
    }
}




//-------------------- app/Views/users/index.php
<h1 style="color: mediumspringgreen">Page User</h1>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur distinctio dolorem officiis omnis perferendis, porro quaerat quibusdam sequi? Dignissimos, modi.</p>
<a href="<?php url('/product/index'); ?>">read-more</a>




//-------------------- app/Views/products/index.php
<h1 style="color: deepskyblue">Page Product</h1>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur distinctio dolorem officiis omnis perferendis, porro quaerat quibusdam sequi? Dignissimos, modi.</p>
<a href="<?php url('/user/index') ?>">read-more</a>




//-------------------- app/Config/config.php
const BASE_URL = "http://localhost/php_mvc_tur";

function assets($url)
{
    echo BASE_URL . "/public" . $url;
}
function url($url)
{
    echo BASE_URL . $url;
}



//-------------------- app/Bootstrap.php
require_once "Config/config.php";
require_once "Libraries/Controller.php";
require_once "Libraries/Core.php";  //route
require_once "Libraries/Database.php";
































//------------------------------------------------------------------------------------- Lesson 11 (Controller view data)
//-------------------- app/Libraries/Controller.php
public function view($view, $data = [])
{
    $view = str_replace(".", '/', $view);
    if (file_exists("../app/Views/$view.php")) {
        return require_once "../app/Views/$view.php";
    }else {
        return require_once "../app/Views/errors/404.php";
    }
}



//-------------------- app/Controllers/ProductController.php
public function index()
    {
        $data = ["mahdi", "shm", "noroallah", 25, "Tehran"];
        return $this->view("products.index", $data);
    }




//-------------------- app/Views/products/index.php
<h1 style="color: deepskyblue">Page Product</h1>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur distinctio dolorem officiis omnis perferendis, porro quaerat quibusdam sequi? Dignissimos, modi.</p>
<a href="<?php url('/user/index') ?>">read-more</a>

<?php foreach ($data as $item): ?>
    <h2><?= $item ?></h2>
<?php endforeach; ?>

</body>
</html>
































//------------------------------------------------------------------------------------- Lesson 12,13 (Config + Database)
//-------------------- app/Config/config.php
//----- Config
const SITENAME = "website blog and shop";
const BASE_URL = "http://localhost/php_mvc_tur";
define("APP_ROOT", dirname(__DIR__));  //dirname(__DIR__) : یک پوشه بر میگیرده عقب -> C:\xampp\htdocs\php_mvc_tur\app

//----- DATABASE
const DB_HOST = "localhost";
const DB_PORT = 3307;
const DB_DATABASE = "php_mvc_tur";
const DB_USERNAME = "root";
const DB_PASSWORD = "";

//----- Methods
function assets($url)
{
    echo BASE_URL . "/public" . $url;
}
function url($url)
{
    echo BASE_URL . $url;
}





//-------------------- app/Libraries/Database.php
class Database
{
    private string $localhost = DB_HOST;
    private string $db_name = DB_DATABASE;
    private string $username = DB_USERNAME;
    private string $password = DB_PASSWORD;
    private int $port = DB_PORT;
    //pdo orm php
    private $dbh;    //database handler OR $sql به این اسم معروف
    private $stm;    //statement -> دستورات
    private $error;  //error database

    public function __construct()
    {
        try {
            //$options = [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_OBJ];//1-error  2-data obj ->
            $this->dbh = new PDO("mysql:host=$this->localhost;dbname=$this->db_name;port=$this->port;charset=utf8", $this->username, $this->password);
            $this->dbh->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_OBJ);  //data obj ->
            echo "Database Connection Successfully";

        } catch (PDOException $e) {
            $this->error = $e->getMessage();
            echo $this->error;
        }
    }

}
$database  = new Database();









































//------------------------------------------------------------------------------------------ Lesson 14 (Database method)
//-------------------- app/Libraries/Database.php
class Database
{
    private string $localhost = DB_HOST;
    private string $db_name = DB_DATABASE;
    private string $username = DB_USERNAME;
    private string $password = DB_PASSWORD;
    private int $port = DB_PORT;
    //pdo orm php
    private $dbh;    //database handler OR $conn به این اسم معروف
    private $stmt;    //statement -> دستورات
    private $error;  //error database

    public function __construct()
    {
        try {
            //$options = [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_OBJ];//1-error  2-data obj ->
            $this->dbh = new PDO("mysql:host=$this->localhost;dbname=$this->db_name;port=$this->port;charset=utf8", $this->username, $this->password);
            $this->dbh->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_OBJ);  //data obj ->
            //echo "Database Connection Successfully";

        } catch (PDOException $e) {
            $this->error = $e->getMessage();
            echo $this->error;
        }
    }

    public function prepare($sql)
    {
        $this->stmt = $this->dbh->prepare($sql);
    }

    public function bindParam($param, $value)
    {
        //select * from users where id=:id -> درون (ام وی سی) از این مدل استافده میکنیم و نمیتونیم از علامت سوال استفاده کنیم
        $this->stmt->bindParam($param, $value);
    }

    public function execute()
    {
        $this->stmt->execute();
    }

    public function fetch()
    {
        $this->execute();
        return $this->stmt->fetch();
    }

    public function fetchAll()
    {
        $this->execute();
        return $this->stmt->fetchAll();  //return object
    }

    public function rowCount()
    {
        return $this->stmt->rowCount();
    }

    public function count($object): int
    {
        return count($object);
    }
}
































//-------------------------------------------------------------------------------------- Lesson 15 (Posts show all data)
1) create table posts



//-------------------- app/Controllers/PostController.php
class PostController extends Controller
{
    private $postModel;
    public function __construct()
    {
        $this->postModel = $this->model('Post');
    }

    public function index()
    {
        $posts = $this->postModel->fetchAllPosts();
        return $this->view('posts.index', ["posts" => $posts]);
    }
}



//-------------------- app/Models/Post.php  part1 (is better)
class Post
{
    private Database $db;
    public function __construct()
    {
        $this->db = new Database();
    }

    public function fetchAllPosts()
    {
        $this->db->prepare("SELECT * FROM `posts`");
        return $this->db->fetchAll();
    }
}



//-------------------- app/Models/Post.php  part2
class Post extends Database
{
    public function fetchAllPosts()
    {
        $this->prepare("SELECT * FROM `posts`");
        return $this->fetchAll();
    }
}



//-------------------- app/Views/posts/index.php
<h1 style="color: mediumspringgreen">Page Post</h1>
<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur distinctio dolorem officiis omnis perferendis, porro quaerat quibusdam sequi? Dignissimos, modi.</p>
<a href="<?php url('/product/index'); ?>">read-more</a>
<br/><br/><br/>
<hr/>

<?php foreach ($data['posts'] as $post): ?>
    <p><?php echo $post->image ?></p>
    <p><?php echo $post->title ?></p>
    <p><?php echo $post->description ?></p>
    <p><?php echo $post->created_at ?></p>
    <hr/>
<?php endforeach; ?>

</body>
</html>





























//------------------------------------------------------------------------------------------- Lesson 16 (Slider modeule)
1)  npm init -y  //بدون سوال اماده میاد پکیج جیسون میسازه
2)  npm init     //پکیج جیسون میسازه همراه سوالات مثل اسم پکیج و کلیمات کلیدی و نام نویسنده
3)  node -v     //v20.10.0  +  npm -v //10.2.3
4)  npm install swiper  //befor installed (node,npm)
5)  Swiper -> url -> https://swiperjs.com/demos
6)  copy -> cdn css -> <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
7)  preview -> getCode(style)
8)  copy -> cdn js -> script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
9)  copy script -> <script> var swiper = new Swiper(".mySwiper", { ...
10) copy html   -> <div class="swiper mySwiper">  <div class="swiper-wrapper"> ...




//-------------------- package.json
{
  "name": "php_mvc_tur",
  "version": "1.0.0",
  "description": "php mvc",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "php",
    "mvc"
  ],
  "author": "mahdishm",
  "license": "ISC",
  "dependencies": {
    "swiper": "^11.1.14"
  }
}





//-------------------- app/Controllers/SliderController.php
class SliderController extends Controller
{
    private $sliderModel;

    public function __construct()
    {
        $this->sliderModel = $this->model('Slider');
    }

    public function index()
    {
        return $this->view('sliders.index');
    }
}




//-------------------- app/Models/Slider.php
class Slider
{
    private Database $db;

    public function __construct()
    {
        $this->db = new Database();
    }
}




//-------------------- app/Views/sliders/index.php
<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>اسلایدر</title>
    <!-- Link css -->
    <link rel="stylesheet" href="<?php assets('/plugins/swiper/swiper-bundle.min.css'); ?>">
    <link rel="stylesheet" href="<?php assets('/css/main.css'); ?>">
</head>
<body>

    <h1>This page is slider - index</h1>
    <!-- Swiper -->
    <div class="swiper mySwiper">
        <div class="swiper-wrapper">
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-2.jpg'); ?>" alt=""></div>
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-1.jpg'); ?>" alt=""></div>
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-3.jpg'); ?>" alt=""></div>
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-4.jpg'); ?>" alt=""></div>
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-5.jpg'); ?>" alt=""></div>
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/sample-1.png'); ?>" alt=""></div>
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/sample-2.png'); ?>" alt=""></div>
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/sample-6.jpg'); ?>" alt=""></div>
            <div class="swiper-slide"><img src="<?php assets('/images/sliders/sample-7.jpg'); ?>" alt=""></div>
        </div>
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-pagination"></div>
    </div>

</body>

<!-- script js -->
<script src="<?php assets('/plugins/swiper/swiper-bundle.min.js'); ?>"></script>
<script src="<?php assets('/js/main.js'); ?>"></script>
</html>
































//-------------------------------------------------------------------------------------- Lesson 17 (Bootstrap, composer)
1) npm i bootstrap
2) npm uninstall bootstrap  //remove package
3) npm uninstall swiper
4) packagist -> https://packagist.org/  -> for download package blade
5) composer require jenssegers/blade  //نصب نکرد مشکل فیلتر شکن



//-------------------- app/Views/sliders/index.php
    <title>اسلایدر</title>
    <link rel="stylesheet" href="<?php assets('/plugins/bootstrap/dist/css/bootstrap.min.css'); ?>">
    <link rel="stylesheet" href="<?php assets('/plugins/swiper/swiper-bundle.min.css'); ?>">
</head>
<body>

</body>
<!-- script js -->
<script src="<?php assets('/plugins/bootstrap/dist/js/bootstrap.min.js'); ?>"></script>
<script src="<?php assets('/plugins/bootstrap/dist/js/bootstrap.bundle.min.js'); ?>"></script>
</html>






























//-------------------------------------------------------------------------------------------- Lesson 18 (Slider creare)
//-------------------- app/Views/sliders/index.php
<div class="container">
    <div class="mb-3">
        <a href="<?php url('/slider/create'); ?>" class="btn btn-primary">ایجاد اسلایدر</a>
    </div>

    <div class="col-12">
        <div class="swiper mySwiper">
            <div class="swiper-wrapper shadow">
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-2.jpg'); ?>" alt=""></div>
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-1.jpg'); ?>" alt=""></div>
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-3.jpg'); ?>" alt=""></div>
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-4.jpg'); ?>" alt=""></div>
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/Edge-5.jpg'); ?>" alt=""></div>
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/sample-1.png'); ?>" alt=""></div>
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/sample-2.png'); ?>" alt=""></div>
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/sample-6.jpg'); ?>" alt=""></div>
                <div class="swiper-slide"><img src="<?php assets('/images/sliders/sample-7.jpg'); ?>" alt=""></div>
            </div>
            <div class="swiper-button-next"></div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-pagination"></div>
        </div>
    </div>

</div>




//-------------------- app/Views/sliders/create.php
<div class="container">
    <div class="mb-3">
        <a href="<?php url('/slider'); ?>" class="btn btn-primary">لیست اسلایدر</a> <!-- '/slider' -> میاد کنترلر اسلایدر باز میکنه و پیش فرض ممتود ایندکس -->
    </div>

    <div class="row mt-1">
        <div class="col-12 p-5 bg-light shadow">
            <form action="<?php url('/slider/store'); ?>" method="POST" enctype="multipart/form-data">

                <div class="input-group">
                    <label class="w-100 mb-2" for="link">لینک</label>
                    <input type="text" name="link" id="link" class="form-control mb-3" placeholder="لینک اسلایدر" >
                </div>

                <div class="input-group">
                    <label class="w-100 mb-2" for="image">تصویر</label>
                    <input type="file" name="image" id="image" class="form-control mb-3" >
                </div>

                <div class="input-group">
                    <label class="w-100 mb-2" for="alt">نام تصویر</label>
                    <input type="text" name="alt" id="alt" class="form-control mb-3" placeholder="نام تصویر اسلایدر" >
                </div>

                <div class="input-group">
                    <label class="w-100 mb-2" for="status">وضعیت</label>
                    <select name="status" id="status" class="form-control">
                        <option value="active">فعال</option>
                        <option value="deactive">غیر فعال</option>
                    </select>
                </div>

                <div class="input-group">
                    <input type="submit" class="btn btn-success mt-3" value="ایجاد">
                </div>

            </form>
        </div>
    </div>
</div>

































//--------------------------------------------------------------------------------------------- Lesson 19 (Slider store)
//-------------------- app/Controllers/SliderController.php
public function store()
{
    $link = $_POST['link'];
    $image = $_FILES['image'];
    $alt = $_POST['alt'];
    $status = $_POST['status'];
    if (!empty($link)) {
        if (!empty($image['name'])) {

            $imageData = $this->uploadImage('sliders', $image);
            if ($imageData[1] == true) {
                $this->sliderModel->store($link, $imageData[0], $alt, $status);
                $_SESSION['success'] = 'اسلایدر با موفقیت ایجاد شد';
                header('Location:' . BASE_URL . '/slider');
            }else {
                header('Location:' . BASE_URL . '/slider/create');
            }

        } else {
            $_SESSION['error'] = "تصویر اسلایدر نباید خالی باشد";
            header('Location:' . BASE_URL . '/slider/create');
        }
    } else {
        $_SESSION['error'] = "فیلد لینک اسلایدر نباید خالی باشد";
        header('Location:' . BASE_URL . '/slider/create');
    }
}



//-------------------- app/Models/Slider.php
class Slider
{
    private Database $db;
    public function __construct()
    {
        $this->db = new Database();
    }

    public function store($link, $image_name, $alt, $status)
    {
        $this->db->prepare("INSERT INTO `sliders` SET link=:link, image=:image, alt=:alt, status=:status");
        $this->db->bindParam('link', $link);
        $this->db->bindParam('image', $image_name);
        $this->db->bindParam('alt', $alt);
        $this->db->bindParam('status', $status);
        $this->db->execute();
    }
}



//-------------------- app/Libraries/Controller.php
public function uploadImage($path, $image)
{
    $path = "../public/images/$path";
    if (!file_exists($path)) {  //app/Bootstrap.php آدرس جایی که کنترلر صدا زدیم
        mkdir($path);
    }
    $upload = true;
    $image_name = time() . '_' . rand(1, 10000) . '_' . $image['name'];
    $directory = $path . "/$image_name";
    $fileType = strtolower(pathinfo($directory, PATHINFO_EXTENSION));

    //عکس ما jpg مخالف اولی فالس دومی ترو سومی و چهارمی ترو در کل وارد نمیش چون شرط ما and باید همه صحیح باشد
    if ($fileType != "jpg" && $fileType != "jpeg" && $fileType != "png" && $fileType != 'webp') {
        $upload = false;
        $_SESSION['image_error'] = 'فرمت عکس باید یکی از این موارد باشد. jpg, jpeg, png, webp';
    }

    if ($image['size'] > 2000000) {
        $upload = false;
        $_SESSION['image_error'] = "سایز تصویر نباید بیشتر از 2 مگابایت باشد";
    }

    if ($upload) {
        move_uploaded_file($image['tmp_name'], $directory);  //1)tmp_name  2)dir(image)
    }
    return [$image_name, $upload];
}




//-------------------- app/Views/sliders/create.php
<form action="<?php url('/slider/store'); ?>" method="POST" enctype="multipart/form-data">
    <div class="input-group">
        <label class="w-100 mb-2" for="link">لینک</label>
        <input type="text" name="link" id="link" class="form-control mb-3" placeholder="لینک اسلایدر" >
    </div>

    <div class="input-group">
        <label class="w-100 mb-2" for="image">تصویر</label>
        <input type="file" name="image" id="image" class="form-control mb-3" >
    </div>

    <div class="input-group">
        <label class="w-100 mb-2" for="alt">نام تصویر</label>
        <input type="text" name="alt" id="alt" class="form-control mb-3" placeholder="نام تصویر اسلایدر" >
    </div>

    <div class="input-group">
        <label class="w-100 mb-2" for="status">وضعیت</label>
        <select name="status" id="status" class="form-control">
            <option value="active">فعال</option>
            <option value="deactive">غیر فعال</option>
        </select>
    </div>

    <div class="input-group">
        <input type="submit" class="btn btn-success mt-3" value="ایجاد">
    </div>
</form>

<!-- Session -->
<?php if (isset($_SESSION['image_error'])): ?>
    <script>toastr.error("<?php echo $_SESSION['image_error'] ?>", 'خطا تصویر')</script>
<?php endif; ?>

<?php if (isset($_SESSION['error'])): ?>
    <script>toastr.error("<?php echo $_SESSION['error'] ?>", 'خطا')</script>
<?php endif; ?>

<?php
unset($_SESSION['image_error']);
$_SESSION['error'] = null;
?>





























TIME(05:00)
//---------------------------------------------------------------------------------------- Lesson 20 (Slider show index)
1)
2)
3)


//--------------------


//--------------------



























//------------------------------------------------------------------------------------- Lesson 21 ()
1)
2)
3)


//--------------------


//--------------------























//------------------------------------------------------------------------------------- Lesson 22 ()
1)
2)
3)


//--------------------


//--------------------
























//------------------------------------------------------------------------------------- Lesson 23 ()
1)
2)
3)


//--------------------


//--------------------























//------------------------------------------------------------------------------------- Lesson 24 ()
1)
2)
3)


//--------------------


//--------------------






















//------------------------------------------------------------------------------------- Lesson 25 ()
1)
2)
3)


//--------------------


//--------------------











































































//------------------------------------------------------------------------------------------------------------ IMPORTANT
1)
2)
3)


//----------------------------------------


//----------------------------------------






